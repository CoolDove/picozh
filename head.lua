picozh_enabled = true
-- this file is auto generated by picozh

function gprint(text, x, y, col)
	if text == nil then return end
	local xx, yy = x, y
	for cp in utf8_iter(text) do
		if cp == 10 then
			xx, yy = x, yy + 8
		else
			local data = _unicode_table[cp]
			if data then
				local w, h, dx, dy, bitmap = unpack(data)
				local rows = split(bitmap, ",")

				for row=1,#rows do
					local byte = tonum("0x"..rows[row])
					for bit=0,7 do
						if band(byte, shl(0x80, -bit)) ~= 0 then
							pset(xx + bit + dx, yy + 5 - h - dy + row, col) -- 5: hardcoded baseline
						end
					end
				end
				xx = xx + w + dx + 2
			else
				print("?", xx,yy, col)
				xx = xx + 4
			end
		end
	end
end

function utf8_iter(s)
	local i = 1
	return function()
		if i > #s then return nil end
		local c = ord(s, i)
		local cp, len

		if c < 0x80 then
			cp = c
			len = 1
		elseif c < 0xe0 then
			cp = band(c, 0x1f) << 6 | band(ord(s, i+1), 0x3f)
			len = 2
		elseif c < 0xf0 then
			cp = band(c, 0x0f) << 12 | band(ord(s, i+1), 0x3f) << 6 | band(ord(s, i+2), 0x3f)
			len = 3
		else
			cp = band(c, 0x07) << 18 | band(ord(s, i+1), 0x3f) << 12 | band(ord(s, i+2), 0x3f) << 6 | band(ord(s, i+3), 0x3f)
			len = 4
		end

		i = i + len
		return cp
	end
end

_unicode_table = {}

function regchar(codestr) -- codepoint;w;h;ox;oy;bitmap
	local parsed = split(codestr, ";")
	_unicode_table[parsed[1]] = {unpack(parsed, 2)}
end

